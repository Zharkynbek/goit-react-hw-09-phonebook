{"version":3,"sources":["loader/loader.js","redux/auth/auth-selectors.js","components/Navigation/AuthNav.js","components/Routes/PrivatRoute/PrivateRoute.js","components/Routes/PublicRoute/PublicRoute.js","App.js","redux/contacts/reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/contacts/phonebookActions.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js"],"names":["Loader","style","position","top","left","transform","type","color","height","width","isAuthorized","state","auth","isAuthenticated","getUsername","user","name","AuthNav","dispatch","useDispatch","authorized","useSelector","userName","navigation","useRef","console","log","useEffect","gsap","fromTo","y","ease","Power3","easeInOut","ref","el","to","className","Button","variant","onClick","logout","PrivateRoute","Component","component","redirectTo","routeProps","render","props","PublicRoute","authenticated","restricted","HomeView","lazy","RegisterView","LoginView","Phonebook","connect","updateUser","getCurrentUser","fallback","exact","path","contacts","createReducer","addContactSuccess","payload","handleDeleteContactsSuccess","filter","id","fetchContactsSuccess","_","loading","addContactRequest","addContactError","handleDeleteContactsRequest","handleDeleteContactsError","fetchContactsRequest","fetchContactsError","handleFilterContacts","combineReducers","initialUserState","email","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","error","registerError","loginError","logoutError","getCurrentUserError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","phonebook","contactsReducer","persistReducer","authReducer","devTools","process","obj","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","createAction","e","target","value","axios","defaults","baseURL","headers","common","Authorization","logoutRequest","post","then","data","catch","message","register","credentials","registerRequest","login","loginRequest","getState","persistedToken","getCurrentUserRequest","get","err"],"mappings":"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","file":"static/js/main.dd5834c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport MyLoader from \"react-loader-spinner\";\r\n\r\nconst Loader = () => (\r\n  <MyLoader\r\n    style={{\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n    }}\r\n    type=\"Circles\"\r\n    color=\"#00BFFF\"\r\n    height={80}\r\n    width={80}\r\n  />\r\n);\r\n\r\nexport default Loader;\r\n","// export const isAuthorized = (state) => !!state.auth.token;\r\nexport const isAuthorized = (state) => !!state.auth.isAuthenticated;\r\n\r\nexport const getUsername = (state) => state.auth.user.name;\r\n","import { useRef, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { gsap, Power3 } from \"gsap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isAuthorized, getUsername } from \"../../redux/auth/auth-selectors\";\r\nimport { logout } from \"../../redux/auth/auth-operations\";\r\n\r\nexport default function AuthNav() {\r\n  const dispatch = useDispatch();\r\n  const authorized = useSelector(isAuthorized);\r\n  const userName = useSelector(getUsername);\r\n\r\n  let navigation = useRef(null);\r\n  const onLogout = () => dispatch(logout());\r\n  console.log(authorized);\r\n  useEffect(() => {\r\n    gsap.fromTo(\r\n      navigation,\r\n      1.5,\r\n      {\r\n        y: -150,\r\n      },\r\n      {\r\n        y: 0,\r\n        ease: Power3.easeInOut,\r\n      }\r\n    );\r\n  }, []);\r\n  return (\r\n    <div ref={(el) => (navigation = el)}>\r\n      <div>\r\n        <NavLink to=\"/\" className=\"Home\">\r\n          <Button variant=\"contained\" color=\"secondary\">\r\n            Home\r\n          </Button>\r\n        </NavLink>\r\n        {authorized && (\r\n          <NavLink to=\"/contacts\" className=\"Contacts\">\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Contacts\r\n            </Button>\r\n          </NavLink>\r\n        )}\r\n      </div>\r\n      {!authorized ? (\r\n        <div>\r\n          <NavLink to=\"/register\" className=\"HomePageSignUp\">\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Sign Up\r\n            </Button>\r\n          </NavLink>\r\n          <NavLink to=\"/login\" className=\"HomePageSignIn\">\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Sign In\r\n            </Button>\r\n          </NavLink>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p className=\"userName\">\r\n            Hello, <span>{userName}</span>\r\n          </p>\r\n          <div className=\"Logout\">\r\n            {\" \"}\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={onLogout}>\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isAuthorized } from \"../../../redux/auth/auth-selectors\";\r\n\r\nexport default function PrivateRoute({\r\n  component: Component,\r\n  redirectTo,\r\n  ...routeProps\r\n}) {\r\n  const isAuthenticated = useSelector(isAuthorized);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={redirectTo} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isAuthorized } from \"../../../redux/auth/auth-selectors\";\r\n\r\nexport default function PublicRoute({\r\n  component: Component,\r\n  redirectTo,\r\n  ...routeProps\r\n}) {\r\n  const authenticated = useSelector(isAuthorized);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        authenticated && routeProps.restricted ? (\r\n          <Redirect to={redirectTo} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, Suspense, lazy } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport Loader from \"./loader/loader\";\nimport { connect } from \"react-redux\";\nimport AuthNav from \"./components/Navigation/AuthNav\";\nimport getCurrentUser from \"./redux/auth/auth-operations\";\nimport PrivateRoute from \"./components/Routes/PrivatRoute/PrivateRoute\";\nimport PublicRoute from \"./components/Routes/PublicRoute/PublicRoute\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\nconst Phonebook = lazy(() => import(\"./components/Phonebook/Phonebook\"));\n\nfunction App({ updateUser }) {\n  useEffect(() => {\n    updateUser();\n  }, [updateUser]);\n  return (\n    <div>\n      <AuthNav />\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <PublicRoute exact path=\"/\" component={HomeView} />\n          <PublicRoute\n            path=\"/register\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={RegisterView}\n          />\n          <PublicRoute\n            path=\"/login\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={LoginView}\n          />\n          <PrivateRoute\n            path=\"/contacts\"\n            redirectTo=\"/home\"\n            component={Phonebook}\n          />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateUser: () => dispatch(getCurrentUser.getCurrentUser()),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  handleFilterContacts,\r\n  handleDeleteContactsSuccess,\r\n  handleDeleteContactsRequest,\r\n  handleDeleteContactsError,\r\n  fetchContactsSuccess,\r\n  fetchContactsRequest,\r\n  fetchContactsError,\r\n} from \"./phonebookActions\";\r\n\r\nconst contacts = createReducer([], {\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [handleDeleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter((el) => el.id !== payload),\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [handleDeleteContactsRequest]: () => true,\r\n  [handleDeleteContactsError]: () => false,\r\n  [handleDeleteContactsSuccess]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [handleFilterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./auth-actions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport contactsReducer from \"./contacts/reducer\";\r\nimport authReducer from \"./auth/auth-reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"token\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst obj = {\r\n  store,\r\n  persistor,\r\n};\r\nexport default obj;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// ================ addContacts ======================\r\n\r\nexport const addContactRequest = createAction(\"phonebook/AddContactRequest\");\r\nexport const addContactSuccess = createAction(\"phonebook/AddContactSuccess\");\r\nexport const addContactError = createAction(\"phonebook/AddContactError\");\r\n\r\n// ================ deleteContacts ======================\r\n\r\nexport const handleDeleteContactsRequest = createAction(\r\n  \"phonebook/DeleteContactRequest\"\r\n);\r\nexport const handleDeleteContactsSuccess = createAction(\r\n  \"phonebook/DeleteContactSuccess\"\r\n);\r\nexport const handleDeleteContactsError = createAction(\r\n  \"phonebook/DeleteContactError\"\r\n);\r\n\r\n// ================ filterContatcs ======================\r\n\r\nexport const handleFilterContacts = createAction(\r\n  \"phonebook/FilterContact\",\r\n  (e) => ({\r\n    payload: e.target.value,\r\n  })\r\n);\r\n\r\n// ================ fetchContacts ======================\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"phonebook/UpdateContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"phonebook/UpdateContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"phonebook/UpdateContactsError\");\r\n","import axios from \"axios\";\r\nimport authActions from \"./auth-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  axios\r\n    .post(\"/users/signup\", credentials)\r\n    .then(({ data }) => {\r\n      token.set(data.token);\r\n      dispatch(authActions.registerSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(authActions.registerError(error.message)));\r\n};\r\n\r\nexport const login = (credentials) => (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post(\"/users/login\", credentials)\r\n    .then(({ data }) => {\r\n      token.set(data.token);\r\n      dispatch(authActions.loginSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(authActions.loginError(error.message)));\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  axios\r\n    .post(\"/users/logout\")\r\n    .then(({ data }) => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(authActions.logoutError(error.message)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get(\"/users/current\")\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch((err) => dispatch(authActions.getCurrentUserError(err.message)));\r\n};\r\nconst obj = {\r\n  register,\r\n  login,\r\n  getCurrentUser,\r\n};\r\nexport default obj;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nconst obj = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n\r\nexport default obj;\r\n"],"sourceRoot":""}