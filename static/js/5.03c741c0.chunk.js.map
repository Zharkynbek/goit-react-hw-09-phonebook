{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","LoginView","useState","email","setEmail","password","setPassword","dispatch","useDispatch","useEffect","onSubmit","e","preventDefault","authOperations","login","autoComplete","type","name","onChange","target","variant","color"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,4FI4DvFC,UA5Df,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,cAyBjB,OAvBAC,qBAAU,WACRL,EAAS,qBACTE,EAAY,iBACX,CAACF,EAAUE,IAqBZ,gCACE,iDACA,uBAAMI,SAbW,SAACC,GACpBA,EAAEC,iBACFL,EACEM,IAAeC,MAAM,CACnBX,QACAE,eAQ4BU,aAAa,MAA3C,UACE,kCACE,sCACA,uBACEC,KAAK,QACLC,KAAK,QACLrB,MAAOO,EACPe,SA5BU,SAACP,GACnBP,EAASO,EAAEQ,OAAOvB,aA+Bd,kCACE,yCACA,uBACEoB,KAAK,WACLC,KAAK,WACLrB,MAAOS,EACPa,SAlCa,SAACP,GACtBL,EAAYK,EAAEQ,OAAOvB,aAoCjB,uBACA,cAAC,IAAD,CAAQoB,KAAK,SAASI,QAAQ,YAAYC,MAAM,YAAhD","file":"static/js/5.03c741c0.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport authOperations from \"../redux/auth/auth-operations\";\r\n\r\nfunction LoginView() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setEmail(\"klklklkl@mail.com\");\r\n    setPassword(\"klklklkl123\");\r\n  }, [setEmail, setPassword]);\r\n\r\n  const updateEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      authOperations.login({\r\n        email,\r\n        password,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Please, Sign In</h1>\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <label>\r\n          <p>Email</p>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={updateEmail}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <p>Password</p>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={updatePassword}\r\n          />\r\n        </label>\r\n        <br />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n          Sign In\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginView;\r\n"],"sourceRoot":""}