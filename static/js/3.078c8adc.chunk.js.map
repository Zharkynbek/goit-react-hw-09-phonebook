{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","helpers/filterContacts.js","redux/contacts/phonebookSelectors.js","components/Phonebook/PhonebookForm/PhonebookForm.js","redux/contacts/phoenbookOperations.js","components/Phonebook/PhonebookList/PhonebookList.js","components/Phonebook/PhonebookFilter/PhonebookFilter.js","components/Phonebook/Phonebook.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","textAnimation","text","rand","x","Math","random","animateText","querySelectorAll","map","n","style","forEach","setTimeout","assign","opacity","color","transform","innerHTML","textContent","trim","join","filterContacts","contacts","filter","contact","name","toLowerCase","includes","selector","getFilterValue","state","phonebook","getContactList","reducer","action","type","payload","number","PhonebookForm","numberRef","useRef","nameRef","btnRef","useReducer","setState","dispatch","useDispatch","useSelector","phonebookSelectors","useEffect","gsap","fromTo","ease","Power3","easeInOut","rotate","handleSetContact","e","target","onSubmit","preventDefault","some","alert","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","ref","el","htmlFor","onInput","pattern","title","required","Button","variant","PhonebookList","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","filteredContacts","useMemo","console","log","id","onClick","handleDeleteContactsRequest","delete","handleDeleteContactsSuccess","handleDeleteContactsError","deleteContact","className","PhonebookFilter","filterValue","actions","Phonebook"],"mappings":"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","file":"static/js/3.078c8adc.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const filterContacts = (contacts, filter) => {\r\n  return contacts.filter((contact) => {\r\n    return contact.name.toLowerCase().includes(filter.toLowerCase().trim());\r\n  });\r\n};\r\n\r\nexport default filterContacts;\r\n\r\nexport function textAnimation(text) {\r\n  text.innerHTML = [...text.textContent]\r\n    .map(\r\n      (n) =>\r\n        `<span style=\"letter-spacing: 0.05em;font-weight: 300;font-size: 20px;transition: all 1.5s;position: relative;display: inline-block\">${\r\n          n.trim() ? n : \"&nbsp;\"\r\n        }</span>`\r\n    )\r\n    .join(\"\");\r\n  setTimeout(animateText, 1000);\r\n  animateText();\r\n  function rand(x) {\r\n    return `${Math.random() * x - x * 0.5}px`;\r\n  }\r\n  function animateText() {\r\n    [...text.querySelectorAll(\"span\")]\r\n      .map((n) => n.style)\r\n      .forEach((n, i) => {\r\n        setTimeout(\r\n          () =>\r\n            Object.assign(\r\n              n,\r\n              !n.opacity || +n.opacity === 1\r\n                ? {\r\n                    opacity: 0,\r\n                    color: \"blue\",\r\n                    transform: `translate3d(${rand(400)}, ${rand(400)}, ${rand(\r\n                      300\r\n                    )})`,\r\n                  }\r\n                : {\r\n                    opacity: 1,\r\n                    color: \"rgb(35, 34, 40)\",\r\n                    transform: `translate3d(0, 0, 0)`,\r\n                  }\r\n            ),\r\n          i * 20\r\n        );\r\n      });\r\n  }\r\n}\r\n","const getFilterValue = (state) => state.phonebook.filter;\r\nconst getContactList = (state) => state.phonebook.contacts;\r\n\r\nconst selector = {\r\n  getFilterValue,\r\n  getContactList,\r\n};\r\nexport default selector;\r\n","import { useRef, useEffect, useReducer } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { gsap, Power3 } from \"gsap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport phonebookSelectors from \"../../../redux/contacts/phonebookSelectors\";\r\nimport { addContact } from \"../../../redux/contacts/phoenbookOperations\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"name\":\r\n      return {\r\n        ...state,\r\n        name: action.payload,\r\n      };\r\n\r\n    case \"number\":\r\n      return {\r\n        ...state,\r\n        number: action.payload,\r\n      };\r\n    case \"reset\":\r\n      return {\r\n        name: \"\",\r\n        number: \"\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function PhonebookForm() {\r\n  let numberRef = useRef(null);\r\n  let nameRef = useRef(null);\r\n  let btnRef = useRef(null);\r\n\r\n  const [state, setState] = useReducer(reducer, {\r\n    name: \"\",\r\n    number: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(phonebookSelectors.getContactList);\r\n\r\n  useEffect(() => {\r\n    gsap.fromTo(\r\n      numberRef,\r\n      1.5,\r\n      {\r\n        opacity: 0,\r\n        x: -800,\r\n      },\r\n      {\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: Power3.easeInOut,\r\n      }\r\n    );\r\n\r\n    gsap.fromTo(\r\n      nameRef,\r\n      1.5,\r\n      {\r\n        opacity: 0,\r\n        x: 800,\r\n      },\r\n      {\r\n        x: 0,\r\n        opacity: 1,\r\n        ease: Power3.easeInOut,\r\n      }\r\n    );\r\n\r\n    gsap.fromTo(\r\n      btnRef,\r\n      0.3,\r\n      {\r\n        rotate: 0,\r\n        ease: Power3.easeInOut,\r\n      },\r\n      {\r\n        rotate: 360,\r\n        ease: Power3.easeInOut,\r\n      }\r\n    );\r\n  }, [nameRef]);\r\n\r\n  const handleSetContact = (e) => {\r\n    setState({\r\n      type: e.target.name,\r\n      payload: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddContact = (e) => {\r\n    e.preventDefault();\r\n    if (contacts.some(({ name }) => name === state.name)) {\r\n      alert(`${state.name} is already in contact`);\r\n      return;\r\n    }\r\n    dispatch(\r\n      addContact({\r\n        name: state.name,\r\n        number: state.number,\r\n      })\r\n    );\r\n\r\n    setState({\r\n      type: \"reset\",\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <form action=\"submit\" onSubmit={handleAddContact}>\r\n        <div ref={(el) => (nameRef = el)}>\r\n          <label htmlFor=\"\">\r\n            <p>enter name</p>\r\n            <input\r\n              onInput={handleSetContact}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={state.name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <div ref={(el) => (numberRef = el)}>\r\n          <label>\r\n            <p>enter phone number</p>\r\n            <input\r\n              onInput={handleSetContact}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={state.number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <br />\r\n        <div ref={(el) => (btnRef = el)}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n            Add Contact\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  handleDeleteContactsRequest,\r\n  handleDeleteContactsSuccess,\r\n  handleDeleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./phonebookActions\";\r\n\r\n// axios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nexport const addContact = (contact) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(handleDeleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(handleDeleteContactsSuccess(id)))\r\n    .catch((error) => dispatch(handleDeleteContactsError(error)));\r\n};\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => {\r\n      dispatch(fetchContactsSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\n","import { useEffect, useMemo } from \"react\";\r\nimport filterContacts from \"../../../helpers/filterContacts\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteContact,\r\n  fetchContacts,\r\n} from \"../../../redux/contacts/phoenbookOperations\";\r\nimport phonebookSelectors from \"../../../redux/contacts/phonebookSelectors\";\r\n\r\nexport default function PhonebookList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(phonebookSelectors.getContactList);\r\n  const filter = useSelector(phonebookSelectors.getFilterValue);\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n  const filteredContacts = useMemo(() => {\r\n    console.log(\"useMemo\");\r\n    return filterContacts(contacts, filter);\r\n  }, [contacts, filter]);\r\n  return (\r\n    <ul>\r\n      {filteredContacts.map(({ name, number, id }) => (\r\n        <li key={id}>\r\n          <p>{name}</p>\r\n          <p>{number}</p>\r\n          <button\r\n            onClick={() => dispatch(deleteContact(id))}\r\n            className=\"btnDelete\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../redux/contacts/phonebookActions\";\r\nimport phonebookSelectors from \"../../../redux/contacts/phonebookSelectors\";\r\n\r\nexport default function PhonebookFilter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const filterValue = useSelector(phonebookSelectors.getFilterValue);\r\n  const onAddContact = (e) => dispatch(actions.handleFilterContacts(e));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"PhonebookFilter\">\r\n        <label>\r\n          <p>filter contacts</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            id=\"\"\r\n            value={filterValue}\r\n            onInput={onAddContact}\r\n          />\r\n        </label>\r\n      </div>\r\n      <h3>Contacts</h3>\r\n    </>\r\n  );\r\n}\r\n","import PhonebookForm from \"./PhonebookForm/PhonebookForm\";\r\nimport PhonebookList from \"./PhonebookList/PhonebookList\";\r\nimport PhonebookFilter from \"./PhonebookFilter/PhonebookFilter\";\r\nimport phonebookSelectors from \"../../redux/contacts/phonebookSelectors\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Phonebook() {\r\n  const contacts = useSelector(phonebookSelectors.getContactList);\r\n  const filter = useSelector(phonebookSelectors.getFilterValue);\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <PhonebookForm />\r\n      {(contacts.length > 1 || filter !== \"\") && <PhonebookFilter />}\r\n      <PhonebookList />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}