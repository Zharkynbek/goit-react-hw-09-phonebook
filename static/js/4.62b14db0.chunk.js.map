{"version":3,"sources":["helpers/filterContacts.js","views/HomeView.js"],"names":["textAnimation","text","rand","x","Math","random","animateText","querySelectorAll","map","n","style","forEach","i","setTimeout","Object","assign","opacity","color","transform","innerHTML","textContent","trim","join","filterContacts","contacts","filter","contact","name","toLowerCase","includes","HomeView","useRef","useEffect","ref","el","className","maxWidth","margin"],"mappings":"8LAQO,SAASA,EAAcC,GAW5B,SAASC,EAAKC,GACZ,MAAM,GAAN,OAAUC,KAAKC,SAAWF,EAAQ,GAAJA,EAA9B,MAEF,SAASG,IACP,YAAIL,EAAKM,iBAAiB,SACvBC,KAAI,SAACC,GAAD,OAAOA,EAAEC,SACbC,SAAQ,SAACF,EAAGG,GACXC,YACE,kBACEC,OAAOC,OACLN,EACCA,EAAEO,SAA0B,KAAdP,EAAEO,QAQb,CACEA,QAAS,EACTC,MAAO,kBACPC,UAAU,wBAVZ,CACEF,QAAS,EACTC,MAAO,OACPC,UAAU,eAAD,OAAiBhB,EAAK,KAAtB,aAA+BA,EAAK,KAApC,aAA6CA,EACpD,KADO,SAUf,GAAJU,MAnCRX,EAAKkB,UAAY,YAAIlB,EAAKmB,aACvBZ,KACC,SAACC,GAAD,oJAEIA,EAAEY,OAASZ,EAAI,SAFnB,cAKDa,KAAK,IACRT,WAAWP,EAAa,KACxBA,IAZaiB,IANQ,SAACC,EAAUC,GAChC,OAAOD,EAASC,QAAO,SAACC,GACtB,OAAOA,EAAQC,KAAKC,cAAcC,SAASJ,EAAOG,cAAcP,a,iCCFpE,kCA6BeS,UA1BE,WACf,IAAI7B,EAAO8B,iBAAO,MAIlB,OAHAC,qBAAU,WACRhC,YAAcC,KACb,IAED,mCACE,gCACE,2CACA,qBACEgC,IAAK,SAACC,GAAD,OAASjC,EAAOiC,GACrBC,UAAU,OACVzB,MAAO,CAAE0B,SAAU,QAASC,OAAQ,UAHtC,SAKE,+KAIE","file":"static/js/4.62b14db0.chunk.js","sourcesContent":["const filterContacts = (contacts, filter) => {\r\n  return contacts.filter((contact) => {\r\n    return contact.name.toLowerCase().includes(filter.toLowerCase().trim());\r\n  });\r\n};\r\n\r\nexport default filterContacts;\r\n\r\nexport function textAnimation(text) {\r\n  text.innerHTML = [...text.textContent]\r\n    .map(\r\n      (n) =>\r\n        `<span style=\"letter-spacing: 0.05em;font-weight: 300;font-size: 20px;transition: all 1.5s;position: relative;display: inline-block\">${\r\n          n.trim() ? n : \"&nbsp;\"\r\n        }</span>`\r\n    )\r\n    .join(\"\");\r\n  setTimeout(animateText, 1000);\r\n  animateText();\r\n  function rand(x) {\r\n    return `${Math.random() * x - x * 0.5}px`;\r\n  }\r\n  function animateText() {\r\n    [...text.querySelectorAll(\"span\")]\r\n      .map((n) => n.style)\r\n      .forEach((n, i) => {\r\n        setTimeout(\r\n          () =>\r\n            Object.assign(\r\n              n,\r\n              !n.opacity || +n.opacity === 1\r\n                ? {\r\n                    opacity: 0,\r\n                    color: \"blue\",\r\n                    transform: `translate3d(${rand(400)}, ${rand(400)}, ${rand(\r\n                      300\r\n                    )})`,\r\n                  }\r\n                : {\r\n                    opacity: 1,\r\n                    color: \"rgb(35, 34, 40)\",\r\n                    transform: `translate3d(0, 0, 0)`,\r\n                  }\r\n            ),\r\n          i * 20\r\n        );\r\n      });\r\n  }\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { textAnimation } from \"../helpers/filterContacts\";\r\n\r\nconst HomeView = () => {\r\n  let text = useRef(null);\r\n  useEffect(() => {\r\n    textAnimation(text);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Home-Page</h1>\r\n        <div\r\n          ref={(el) => (text = el)}\r\n          className=\"text\"\r\n          style={{ maxWidth: \"600px\", margin: \"0 auto\" }}\r\n        >\r\n          <p>\r\n            You can fool all of the people some of the time, and some of the\r\n            people all of the time, but you can't fool all of the people all of\r\n            the time.\r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeView;\r\n"],"sourceRoot":""}